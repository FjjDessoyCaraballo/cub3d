Running test for error_test/extra_RGB1.cub...
###########################################################################
==91965== Memcheck, a memory error detector
==91965== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91965== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==91965== Command: ../cub3D error_test/extra_RGB1.cub
==91965== 
==91965== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==91965== 
==91965== HEAP SUMMARY:
==91965==     in use at exit: 0 bytes in 0 blocks
==91965==   total heap usage: 391 allocs, 391 frees, 37,600 bytes allocated
==91965== 
==91965== All heap blocks were freed -- no leaks are possible
==91965== 
==91965== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB2.cub...
###########################################################################
==91974== Memcheck, a memory error detector
==91974== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91974== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==91974== Command: ../cub3D error_test/extra_RGB2.cub
==91974== 
==91974== Warning: invalid file descriptor -1 in syscall close()
==91974== Invalid read of size 8
==91974==    at 0x429F79: break_commas (parsing_utils1.c:81)
==91974==    by 0x429F79: separate_rgb (parsing_utils1.c:105)
==91974==    by 0x429F79: rgb_parse (parsing_utils1.c:152)
==91974==    by 0x426FF2: floor_information (parsing2.c:33)
==91974==    by 0x426FF2: extract (parsing2.c:135)
==91974==    by 0x426AD1: map_handling (parsing1.c:106)
==91974==    by 0x425E11: main (main.c:31)
==91974==  Address 0x4dbb808 is 8 bytes after a block of size 16 alloc'd
==91974==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==91974==    by 0x43A91B: ft_split (ft_split.c:67)
==91974==    by 0x429F51: break_commas (parsing_utils1.c:78)
==91974==    by 0x429F51: separate_rgb (parsing_utils1.c:105)
==91974==    by 0x429F51: rgb_parse (parsing_utils1.c:152)
==91974==    by 0x426FF2: floor_information (parsing2.c:33)
==91974==    by 0x426FF2: extract (parsing2.c:135)
==91974==    by 0x426AD1: map_handling (parsing1.c:106)
==91974==    by 0x425E11: main (main.c:31)
==91974== 
==91974== Invalid read of size 1
==91974==    at 0x43A77B: ft_atoi (ft_atoi.c:20)
==91974==    by 0x42A7E7: rgb_assignment (parsing_utils2.c:44)
==91974==    by 0x42A0AB: break_commas (parsing_utils1.c:86)
==91974==    by 0x42A0AB: separate_rgb (parsing_utils1.c:105)
==91974==    by 0x42A0AB: rgb_parse (parsing_utils1.c:152)
==91974==    by 0x426FF2: floor_information (parsing2.c:33)
==91974==    by 0x426FF2: extract (parsing2.c:135)
==91974==    by 0x426AD1: map_handling (parsing1.c:106)
==91974==    by 0x425E11: main (main.c:31)
==91974==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==91974== 
UndefinedBehaviorSanitizer:DEADLYSIGNAL
==91974==ERROR: UndefinedBehaviorSanitizer: SEGV on unknown address 0x000000000000 (pc 0x00000043a77b bp 0x001ffefff9e0 sp 0x001ffefff9e0 T91974)
==91974==The signal is caused by a READ memory access.
==91974==Hint: address points to the zero page.
==91976== Warning: invalid file descriptor 1024 in syscall close()
    #0 0x43a77b in ft_atoi /home/fdessoy-/projects/cub3d/libft/libft/ft_atoi.c:20:10
    #1 0x42a7e7 in rgb_assignment /home/fdessoy-/projects/cub3d/src/parsing_utils2.c:44:19
    #2 0x42a0ab in break_commas /home/fdessoy-/projects/cub3d/src/parsing_utils1.c:86:6
    #3 0x42a0ab in separate_rgb /home/fdessoy-/projects/cub3d/src/parsing_utils1.c:105:6
    #4 0x42a0ab in rgb_parse /home/fdessoy-/projects/cub3d/src/parsing_utils1.c:152:7
    #5 0x426ff2 in floor_information /home/fdessoy-/projects/cub3d/src/parsing2.c:33:8
    #6 0x426ff2 in extract /home/fdessoy-/projects/cub3d/src/parsing2.c:135:6
    #7 0x426ad1 in map_handling /home/fdessoy-/projects/cub3d/src/parsing1.c:106:6
    #8 0x425e11 in main /home/fdessoy-/projects/cub3d/src/main.c:31:7
    #9 0x4a08d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #10 0x4a08e3f in __libc_start_main csu/../csu/libc-start.c:392:3
    #11 0x4046e4 in _start (/home/fdessoy-/projects/cub3d/cub3D+0x4046e4)

UndefinedBehaviorSanitizer can not provide additional info.
SUMMARY: UndefinedBehaviorSanitizer: SEGV /home/fdessoy-/projects/cub3d/libft/libft/ft_atoi.c:20:10 in ft_atoi
==91974==ABORTING
==91974== 
==91974== Process terminating with default action of signal 11 (SIGSEGV)
==91974==  General Protection Fault
==91974==    at 0x4A78EC2: __pthread_once_slow (pthread_once.c:114)
==91974==    by 0x4B478C2: __rpc_thread_variables (rpc_thread.c:59)
==91974==    by 0x4B9AC0C: free_mem (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==91974==    by 0x4B9A741: __libc_freeres (in /usr/lib/x86_64-linux-gnu/libc.so.6)
==91974==    by 0x483F1B2: _vgnU_freeres (in /usr/libexec/valgrind/vgpreload_core-amd64-linux.so)
==91974==    by 0x51FF87: ???
==91974== 
==91974== HEAP SUMMARY:
==91974==     in use at exit: 32,319 bytes in 32 blocks
==91974==   total heap usage: 386 allocs, 354 frees, 37,532 bytes allocated
==91974== 
==91974== LEAK SUMMARY:
==91974==    definitely lost: 0 bytes in 0 blocks
==91974==    indirectly lost: 0 bytes in 0 blocks
==91974==      possibly lost: 0 bytes in 0 blocks
==91974==    still reachable: 32,319 bytes in 32 blocks
==91974==         suppressed: 0 bytes in 0 blocks
==91974== Rerun with --leak-check=full to see details of leaked memory
==91974== 
==91974== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==91974== 
==91974== 1 errors in context 1 of 2:
==91974== Invalid read of size 1
==91974==    at 0x43A77B: ft_atoi (ft_atoi.c:20)
==91974==    by 0x42A7E7: rgb_assignment (parsing_utils2.c:44)
==91974==    by 0x42A0AB: break_commas (parsing_utils1.c:86)
==91974==    by 0x42A0AB: separate_rgb (parsing_utils1.c:105)
==91974==    by 0x42A0AB: rgb_parse (parsing_utils1.c:152)
==91974==    by 0x426FF2: floor_information (parsing2.c:33)
==91974==    by 0x426FF2: extract (parsing2.c:135)
==91974==    by 0x426AD1: map_handling (parsing1.c:106)
==91974==    by 0x425E11: main (main.c:31)
==91974==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==91974== 
==91974== 
==91974== 1 errors in context 2 of 2:
==91974== Invalid read of size 8
==91974==    at 0x429F79: break_commas (parsing_utils1.c:81)
==91974==    by 0x429F79: separate_rgb (parsing_utils1.c:105)
==91974==    by 0x429F79: rgb_parse (parsing_utils1.c:152)
==91974==    by 0x426FF2: floor_information (parsing2.c:33)
==91974==    by 0x426FF2: extract (parsing2.c:135)
==91974==    by 0x426AD1: map_handling (parsing1.c:106)
==91974==    by 0x425E11: main (main.c:31)
==91974==  Address 0x4dbb808 is 8 bytes after a block of size 16 alloc'd
==91974==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==91974==    by 0x43A91B: ft_split (ft_split.c:67)
==91974==    by 0x429F51: break_commas (parsing_utils1.c:78)
==91974==    by 0x429F51: separate_rgb (parsing_utils1.c:105)
==91974==    by 0x429F51: rgb_parse (parsing_utils1.c:152)
==91974==    by 0x426FF2: floor_information (parsing2.c:33)
==91974==    by 0x426FF2: extract (parsing2.c:135)
==91974==    by 0x426AD1: map_handling (parsing1.c:106)
==91974==    by 0x425E11: main (main.c:31)
==91974== 
==91974== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB3.cub...
###########################################################################
==91985== Memcheck, a memory error detector
==91985== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91985== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==91985== Command: ../cub3D error_test/extra_RGB3.cub
==91985== 
==91985== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==91985== 
==91985== HEAP SUMMARY:
==91985==     in use at exit: 65 bytes in 5 blocks
==91985==   total heap usage: 379 allocs, 374 frees, 37,493 bytes allocated
==91985== 
==91985== LEAK SUMMARY:
==91985==    definitely lost: 0 bytes in 0 blocks
==91985==    indirectly lost: 0 bytes in 0 blocks
==91985==      possibly lost: 0 bytes in 0 blocks
==91985==    still reachable: 65 bytes in 5 blocks
==91985==         suppressed: 0 bytes in 0 blocks
==91985== Rerun with --leak-check=full to see details of leaked memory
==91985== 
==91985== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB4.cub...
###########################################################################
==91994== Memcheck, a memory error detector
==91994== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==91994== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==91994== Command: ../cub3D error_test/extra_RGB4.cub
==91994== 
==91994== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==91994== 
==91994== HEAP SUMMARY:
==91994==     in use at exit: 0 bytes in 0 blocks
==91994==   total heap usage: 385 allocs, 385 frees, 37,564 bytes allocated
==91994== 
==91994== All heap blocks were freed -- no leaks are possible
==91994== 
==91994== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB5.cub...
###########################################################################
==92010== Memcheck, a memory error detector
==92010== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92010== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92010== Command: ../cub3D error_test/extra_RGB5.cub
==92010== 
==92010== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92010== 
==92010== HEAP SUMMARY:
==92010==     in use at exit: 0 bytes in 0 blocks
==92010==   total heap usage: 394 allocs, 394 frees, 37,652 bytes allocated
==92010== 
==92010== All heap blocks were freed -- no leaks are possible
==92010== 
==92010== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite1.cub...
###########################################################################
==92023== Memcheck, a memory error detector
==92023== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92023== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92023== Command: ../cub3D error_test/extra_sprite1.cub
==92023== 
==92023== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92023== 
==92023== HEAP SUMMARY:
==92023==     in use at exit: 0 bytes in 0 blocks
==92023==   total heap usage: 407 allocs, 407 frees, 38,002 bytes allocated
==92023== 
==92023== All heap blocks were freed -- no leaks are possible
==92023== 
==92023== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite2.cub...
###########################################################################
==92032== Memcheck, a memory error detector
==92032== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92032== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92032== Command: ../cub3D error_test/extra_sprite2.cub
==92032== 
==92032== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92032== 
==92032== HEAP SUMMARY:
==92032==     in use at exit: 0 bytes in 0 blocks
==92032==   total heap usage: 405 allocs, 405 frees, 37,939 bytes allocated
==92032== 
==92032== All heap blocks were freed -- no leaks are possible
==92032== 
==92032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite3.cub...
###########################################################################
==92041== Memcheck, a memory error detector
==92041== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92041== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92041== Command: ../cub3D error_test/extra_sprite3.cub
==92041== 
==92041== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92041== 
==92041== HEAP SUMMARY:
==92041==     in use at exit: 0 bytes in 0 blocks
==92041==   total heap usage: 401 allocs, 401 frees, 37,813 bytes allocated
==92041== 
==92041== All heap blocks were freed -- no leaks are possible
==92041== 
==92041== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite4.cub...
###########################################################################
==92050== Memcheck, a memory error detector
==92050== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92050== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92050== Command: ../cub3D error_test/extra_sprite4.cub
==92050== 
==92050== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92050== 
==92050== HEAP SUMMARY:
==92050==     in use at exit: 0 bytes in 0 blocks
==92050==   total heap usage: 403 allocs, 403 frees, 37,876 bytes allocated
==92050== 
==92050== All heap blocks were freed -- no leaks are possible
==92050== 
==92050== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap1.cub...
###########################################################################
==92059== Memcheck, a memory error detector
==92059== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92059== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92059== Command: ../cub3D error_test/wrongmap1.cub
==92059== 
==92059== Warning: invalid file descriptor -1 in syscall close()
Error
Map is broken ):

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92059== 
==92059== HEAP SUMMARY:
==92059==     in use at exit: 0 bytes in 0 blocks
==92059==   total heap usage: 391 allocs, 391 frees, 38,126 bytes allocated
==92059== 
==92059== All heap blocks were freed -- no leaks are possible
==92059== 
==92059== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap2.cub...
###########################################################################
==92068== Memcheck, a memory error detector
==92068== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92068== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92068== Command: ../cub3D error_test/wrongmap2.cub
==92068== 
==92068== Warning: invalid file descriptor -1 in syscall close()
Error
Map is broken ):

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92068== 
==92068== HEAP SUMMARY:
==92068==     in use at exit: 0 bytes in 0 blocks
==92068==   total heap usage: 391 allocs, 391 frees, 38,118 bytes allocated
==92068== 
==92068== All heap blocks were freed -- no leaks are possible
==92068== 
==92068== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap3.cub...
###########################################################################
==92077== Memcheck, a memory error detector
==92077== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92077== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92077== Command: ../cub3D error_test/wrongmap3.cub
==92077== 
==92077== Warning: invalid file descriptor -1 in syscall close()
Error
Map is broken ):

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92077== 
==92077== HEAP SUMMARY:
==92077==     in use at exit: 0 bytes in 0 blocks
==92077==   total heap usage: 382 allocs, 382 frees, 37,943 bytes allocated
==92077== 
==92077== All heap blocks were freed -- no leaks are possible
==92077== 
==92077== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap4.cub...
###########################################################################
==92086== Memcheck, a memory error detector
==92086== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92086== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92086== Command: ../cub3D error_test/wrongmap4.cub
==92086== 
==92086== Warning: invalid file descriptor -1 in syscall close()
Error
Map is not walled correctly ):<

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92086== 
==92086== HEAP SUMMARY:
==92086==     in use at exit: 0 bytes in 0 blocks
==92086==   total heap usage: 399 allocs, 399 frees, 38,564 bytes allocated
==92086== 
==92086== All heap blocks were freed -- no leaks are possible
==92086== 
==92086== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap5.cub...
###########################################################################
==92095== Memcheck, a memory error detector
==92095== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92095== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92095== Command: ../cub3D error_test/wrongmap5.cub
==92095== 
==92095== Warning: invalid file descriptor -1 in syscall close()
Error
Map is not walled correctly ):<

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==92095== 
==92095== HEAP SUMMARY:
==92095==     in use at exit: 0 bytes in 0 blocks
==92095==   total heap usage: 399 allocs, 399 frees, 38,568 bytes allocated
==92095== 
==92095== All heap blocks were freed -- no leaks are possible
==92095== 
==92095== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB1.cub...
###########################################################################
==92104== Memcheck, a memory error detector
==92104== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==92104== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==92104== Command: ../cub3D error_test/missing_RGB1.cub
==92104== 
==92104== Warning: invalid file descriptor -1 in syscall close()
==92104== Invalid read of size 8
==92104==    at 0x40286A8: strncmp (strcmp.S:172)
==92104==    by 0x400668D: is_dst (dl-load.c:216)
==92104==    by 0x400810E: _dl_dst_count (dl-load.c:253)
==92104==    by 0x400810E: expand_dynamic_string_token (dl-load.c:395)
==92104==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==92104==    by 0x4008602: decompose_rpath (dl-load.c:654)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==  Address 0x4fda3c9 is 9 bytes inside a block of size 15 alloc'd
==92104==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==92104==    by 0x40271DF: malloc (rtld-malloc.h:56)
==92104==    by 0x40271DF: strdup (strdup.c:42)
==92104==    by 0x4008594: decompose_rpath (dl-load.c:629)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400E34D: _dl_open (dl-open.c:883)
==92104== 
==92104== Invalid read of size 8
==92104==    at 0x40286A8: strncmp (strcmp.S:172)
==92104==    by 0x400668D: is_dst (dl-load.c:216)
==92104==    by 0x4007F79: _dl_dst_substitute (dl-load.c:295)
==92104==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==92104==    by 0x4008602: decompose_rpath (dl-load.c:654)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==  Address 0x4fda3c9 is 9 bytes inside a block of size 15 alloc'd
==92104==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==92104==    by 0x40271DF: malloc (rtld-malloc.h:56)
==92104==    by 0x40271DF: strdup (strdup.c:42)
==92104==    by 0x4008594: decompose_rpath (dl-load.c:629)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400E34D: _dl_open (dl-open.c:883)
==92104== 
MLX42: LodePNG: failed to open file for reading
MLX42: LodePNG: failed to open file for reading
MLX42: LodePNG: failed to open file for reading
MLX42: LodePNG: failed to open file for reading
Error
MLX couldn't load images
==92104== 
==92104== HEAP SUMMARY:
==92104==     in use at exit: 22,943,875 bytes in 10,153 blocks
==92104==   total heap usage: 72,257 allocs, 62,104 frees, 36,939,024 bytes allocated
==92104== 
==92104== LEAK SUMMARY:
==92104==    definitely lost: 0 bytes in 1 blocks
==92104==    indirectly lost: 0 bytes in 0 blocks
==92104==      possibly lost: 111,246 bytes in 277 blocks
==92104==    still reachable: 22,832,629 bytes in 9,875 blocks
==92104==                       of which reachable via heuristic:
==92104==                         newarray           : 768,888 bytes in 9 blocks
==92104==                         multipleinheritance: 14,400 bytes in 21 blocks
==92104==         suppressed: 0 bytes in 0 blocks
==92104== Rerun with --leak-check=full to see details of leaked memory
==92104== 
==92104== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==92104== 
==92104== 1 errors in context 1 of 2:
==92104== Invalid read of size 8
==92104==    at 0x40286A8: strncmp (strcmp.S:172)
==92104==    by 0x400668D: is_dst (dl-load.c:216)
==92104==    by 0x4007F79: _dl_dst_substitute (dl-load.c:295)
==92104==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==92104==    by 0x4008602: decompose_rpath (dl-load.c:654)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==  Address 0x4fda3c9 is 9 bytes inside a block of size 15 alloc'd
==92104==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==92104==    by 0x40271DF: malloc (rtld-malloc.h:56)
==92104==    by 0x40271DF: strdup (strdup.c:42)
==92104==    by 0x4008594: decompose_rpath (dl-load.c:629)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400E34D: _dl_open (dl-open.c:883)
==92104== 
==92104== 
==92104== 1 errors in context 2 of 2:
==92104== Invalid read of size 8
==92104==    at 0x40286A8: strncmp (strcmp.S:172)
==92104==    by 0x400668D: is_dst (dl-load.c:216)
==92104==    by 0x400810E: _dl_dst_count (dl-load.c:253)
==92104==    by 0x400810E: expand_dynamic_string_token (dl-load.c:395)
==92104==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==92104==    by 0x4008602: decompose_rpath (dl-load.c:654)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==  Address 0x4fda3c9 is 9 bytes inside a block of size 15 alloc'd
==92104==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==92104==    by 0x40271DF: malloc (rtld-malloc.h:56)
==92104==    by 0x40271DF: strdup (strdup.c:42)
==92104==    by 0x4008594: decompose_rpath (dl-load.c:629)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==92104==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==92104==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==92104==    by 0x4003494: openaux (dl-deps.c:64)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==92104==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==92104==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==92104==    by 0x400E34D: _dl_open (dl-open.c:883)
==92104== 
==92104== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB2.cub...
###########################################################################
==93136== Memcheck, a memory error detector
==93136== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==93136== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==93136== Command: ../cub3D error_test/missing_RGB2.cub
==93136== 
==93136== Warning: invalid file descriptor -1 in syscall close()
==93136== Invalid read of size 8
==93136==    at 0x40286A8: strncmp (strcmp.S:172)
==93136==    by 0x400668D: is_dst (dl-load.c:216)
==93136==    by 0x400810E: _dl_dst_count (dl-load.c:253)
==93136==    by 0x400810E: expand_dynamic_string_token (dl-load.c:395)
==93136==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==93136==    by 0x4008602: decompose_rpath (dl-load.c:654)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==  Address 0x4fda9e9 is 9 bytes inside a block of size 15 alloc'd
==93136==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==93136==    by 0x40271DF: malloc (rtld-malloc.h:56)
==93136==    by 0x40271DF: strdup (strdup.c:42)
==93136==    by 0x4008594: decompose_rpath (dl-load.c:629)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400E34D: _dl_open (dl-open.c:883)
==93136== 
==93136== Invalid read of size 8
==93136==    at 0x40286A8: strncmp (strcmp.S:172)
==93136==    by 0x400668D: is_dst (dl-load.c:216)
==93136==    by 0x4007F79: _dl_dst_substitute (dl-load.c:295)
==93136==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==93136==    by 0x4008602: decompose_rpath (dl-load.c:654)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==  Address 0x4fda9e9 is 9 bytes inside a block of size 15 alloc'd
==93136==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==93136==    by 0x40271DF: malloc (rtld-malloc.h:56)
==93136==    by 0x40271DF: strdup (strdup.c:42)
==93136==    by 0x4008594: decompose_rpath (dl-load.c:629)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400E34D: _dl_open (dl-open.c:883)
==93136== 
==93136== 
==93136== Process terminating with default action of signal 2 (SIGINT)
==93136==    at 0x98119D4: ??? (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x9C8C7D1: llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::make_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > >(llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >, llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::BasicBlock*, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> >) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x9C5C9A6: llvm::iterator_range<llvm::po_iterator<llvm::BasicBlock*, llvm::SmallPtrSet<llvm::GraphTraits<llvm::BasicBlock*>::NodeRef, 8u>, false, llvm::GraphTraits<llvm::BasicBlock*> > > llvm::post_order<llvm::BasicBlock*>(llvm::BasicBlock* const&) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x9E7D86A: llvm::PopulateLoopsDFS<llvm::BasicBlock, llvm::Loop>::traverse(llvm::BasicBlock*) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x9E7D546: llvm::LoopInfoBase<llvm::BasicBlock, llvm::Loop>::analyze(llvm::DominatorTreeBase<llvm::BasicBlock, false> const&) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x9E833C0: llvm::LoopInfoWrapperPass::runOnFunction(llvm::Function&) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x8B4BCE1: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x9D83701: ??? (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x8B4C885: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /usr/lib/x86_64-linux-gnu/libLLVM-15.so.1)
==93136==    by 0x63A75C9: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==93136==    by 0x62CF1A7: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==93136==    by 0x62C54B0: ??? (in /usr/lib/x86_64-linux-gnu/dri/radeonsi_dri.so)
==93136== 
==93136== HEAP SUMMARY:
==93136==     in use at exit: 4,727,215 bytes in 13,401 blocks
==93136==   total heap usage: 23,751 allocs, 10,350 frees, 10,184,942 bytes allocated
==93136== 
==93136== LEAK SUMMARY:
==93136==    definitely lost: 0 bytes in 1 blocks
==93136==    indirectly lost: 0 bytes in 0 blocks
==93136==      possibly lost: 72,856 bytes in 745 blocks
==93136==    still reachable: 4,654,359 bytes in 12,655 blocks
==93136==                       of which reachable via heuristic:
==93136==                         multipleinheritance: 4,512 bytes in 12 blocks
==93136==         suppressed: 0 bytes in 0 blocks
==93136== Rerun with --leak-check=full to see details of leaked memory
==93136== 
==93136== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==93136== 
==93136== 1 errors in context 1 of 2:
==93136== Invalid read of size 8
==93136==    at 0x40286A8: strncmp (strcmp.S:172)
==93136==    by 0x400668D: is_dst (dl-load.c:216)
==93136==    by 0x4007F79: _dl_dst_substitute (dl-load.c:295)
==93136==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==93136==    by 0x4008602: decompose_rpath (dl-load.c:654)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==  Address 0x4fda9e9 is 9 bytes inside a block of size 15 alloc'd
==93136==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==93136==    by 0x40271DF: malloc (rtld-malloc.h:56)
==93136==    by 0x40271DF: strdup (strdup.c:42)
==93136==    by 0x4008594: decompose_rpath (dl-load.c:629)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400E34D: _dl_open (dl-open.c:883)
==93136== 
==93136== 
==93136== 1 errors in context 2 of 2:
==93136== Invalid read of size 8
==93136==    at 0x40286A8: strncmp (strcmp.S:172)
==93136==    by 0x400668D: is_dst (dl-load.c:216)
==93136==    by 0x400810E: _dl_dst_count (dl-load.c:253)
==93136==    by 0x400810E: expand_dynamic_string_token (dl-load.c:395)
==93136==    by 0x40082B7: fillin_rpath.isra.0 (dl-load.c:483)
==93136==    by 0x4008602: decompose_rpath (dl-load.c:654)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==  Address 0x4fda9e9 is 9 bytes inside a block of size 15 alloc'd
==93136==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==93136==    by 0x40271DF: malloc (rtld-malloc.h:56)
==93136==    by 0x40271DF: strdup (strdup.c:42)
==93136==    by 0x4008594: decompose_rpath (dl-load.c:629)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:696)
==93136==    by 0x400ABF5: cache_rpath (dl-load.c:677)
==93136==    by 0x400ABF5: _dl_map_object (dl-load.c:2165)
==93136==    by 0x4003494: openaux (dl-deps.c:64)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x4003C7B: _dl_map_object_deps (dl-deps.c:248)
==93136==    by 0x400EA0E: dl_open_worker_begin (dl-open.c:592)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400DF99: dl_open_worker (dl-open.c:782)
==93136==    by 0x4B53A97: _dl_catch_exception (dl-error-skeleton.c:208)
==93136==    by 0x400E34D: _dl_open (dl-open.c:883)
==93136== 
==93136== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
