Running test for error_test/extra_RGB1.cub...
###########################################################################
==129754== Memcheck, a memory error detector
==129754== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129754== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129754== Command: ../cub3D error_test/extra_RGB1.cub
==129754== 
==129754== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129754== 
==129754== HEAP SUMMARY:
==129754==     in use at exit: 0 bytes in 0 blocks
==129754==   total heap usage: 392 allocs, 392 frees, 6,161 bytes allocated
==129754== 
==129754== All heap blocks were freed -- no leaks are possible
==129754== 
==129754== For lists of detected and suppressed errors, rerun with: -s
==129754== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB2.cub...
###########################################################################
==129774== Memcheck, a memory error detector
==129774== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129774== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129774== Command: ../cub3D error_test/extra_RGB2.cub
==129774== 
==129774== Warning: invalid file descriptor -1 in syscall close()
==129774== Invalid read of size 8
==129774==    at 0x10A669: break_commas (parsing_utils1.c:81)
==129774==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129774==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129774==    by 0x109934: floor_information (parsing2.c:30)
==129774==    by 0x109CE7: extract (parsing2.c:133)
==129774==    by 0x109751: map_handling (parsing1.c:110)
==129774==    by 0x1092FF: main (main.c:24)
==129774==  Address 0x4a83b78 is 8 bytes after a block of size 16 alloc'd
==129774==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==129774==    by 0x10BEDE: ft_split (ft_split.c:67)
==129774==    by 0x10A640: break_commas (parsing_utils1.c:78)
==129774==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129774==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129774==    by 0x109934: floor_information (parsing2.c:30)
==129774==    by 0x109CE7: extract (parsing2.c:133)
==129774==    by 0x109751: map_handling (parsing1.c:110)
==129774==    by 0x1092FF: main (main.c:24)
==129774== 
==129774== Invalid read of size 1
==129774==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==129774==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==129774==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==129774==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129774==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129774==    by 0x109934: floor_information (parsing2.c:30)
==129774==    by 0x109CE7: extract (parsing2.c:133)
==129774==    by 0x109751: map_handling (parsing1.c:110)
==129774==    by 0x1092FF: main (main.c:24)
==129774==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==129774== 
==129774== 
==129774== Process terminating with default action of signal 11 (SIGSEGV)
==129774==  Access not within mapped region at address 0x0
==129774==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==129774==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==129774==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==129774==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129774==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129774==    by 0x109934: floor_information (parsing2.c:30)
==129774==    by 0x109CE7: extract (parsing2.c:133)
==129774==    by 0x109751: map_handling (parsing1.c:110)
==129774==    by 0x1092FF: main (main.c:24)
==129774==  If you believe this happened as a result of a stack
==129774==  overflow in your program's main thread (unlikely but
==129774==  possible), you can try to increase the size of the
==129774==  main thread stack using the --main-stacksize= flag.
==129774==  The main thread stack size used in this run was 8388608.
==129774== 
==129774== HEAP SUMMARY:
==129774==     in use at exit: 1,049 bytes in 32 blocks
==129774==   total heap usage: 382 allocs, 350 frees, 6,047 bytes allocated
==129774== 
==129774== LEAK SUMMARY:
==129774==    definitely lost: 0 bytes in 0 blocks
==129774==    indirectly lost: 0 bytes in 0 blocks
==129774==      possibly lost: 0 bytes in 0 blocks
==129774==    still reachable: 1,049 bytes in 32 blocks
==129774==         suppressed: 0 bytes in 0 blocks
==129774== Reachable blocks (those to which a pointer was found) are not shown.
==129774== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==129774== 
==129774== For lists of detected and suppressed errors, rerun with: -s
==129774== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB3.cub...
###########################################################################
==129790== Memcheck, a memory error detector
==129790== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129790== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129790== Command: ../cub3D error_test/extra_RGB3.cub
==129790== 
==129790== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129790== 
==129790== HEAP SUMMARY:
==129790==     in use at exit: 65 bytes in 5 blocks
==129790==   total heap usage: 375 allocs, 370 frees, 6,008 bytes allocated
==129790== 
==129790== LEAK SUMMARY:
==129790==    definitely lost: 0 bytes in 0 blocks
==129790==    indirectly lost: 0 bytes in 0 blocks
==129790==      possibly lost: 0 bytes in 0 blocks
==129790==    still reachable: 65 bytes in 5 blocks
==129790==         suppressed: 0 bytes in 0 blocks
==129790== Reachable blocks (those to which a pointer was found) are not shown.
==129790== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==129790== 
==129790== For lists of detected and suppressed errors, rerun with: -s
==129790== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB4.cub...
###########################################################################
==129799== Memcheck, a memory error detector
==129799== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129799== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129799== Command: ../cub3D error_test/extra_RGB4.cub
==129799== 
==129799== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129799== 
==129799== HEAP SUMMARY:
==129799==     in use at exit: 0 bytes in 0 blocks
==129799==   total heap usage: 377 allocs, 377 frees, 6,025 bytes allocated
==129799== 
==129799== All heap blocks were freed -- no leaks are possible
==129799== 
==129799== For lists of detected and suppressed errors, rerun with: -s
==129799== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB5.cub...
###########################################################################
==129819== Memcheck, a memory error detector
==129819== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129819== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129819== Command: ../cub3D error_test/extra_RGB5.cub
==129819== 
==129819== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129819== 
==129819== HEAP SUMMARY:
==129819==     in use at exit: 0 bytes in 0 blocks
==129819==   total heap usage: 386 allocs, 386 frees, 6,113 bytes allocated
==129819== 
==129819== All heap blocks were freed -- no leaks are possible
==129819== 
==129819== For lists of detected and suppressed errors, rerun with: -s
==129819== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite1.cub...
###########################################################################
==129828== Memcheck, a memory error detector
==129828== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129828== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129828== Command: ../cub3D error_test/extra_sprite1.cub
==129828== 
==129828== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129828== 
==129828== HEAP SUMMARY:
==129828==     in use at exit: 29 bytes in 1 blocks
==129828==   total heap usage: 395 allocs, 394 frees, 6,331 bytes allocated
==129828== 
==129828== 29 bytes in 1 blocks are definitely lost in loss record 1 of 1
==129828==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==129828==    by 0x10BB1A: ft_strdup (ft_strdup.c:26)
==129828==    by 0x109EA1: no_sprite (parsing3.c:31)
==129828==    by 0x10A45C: search_sprites (parsing3.c:148)
==129828==    by 0x109B27: sprites_information (parsing2.c:75)
==129828==    by 0x109D18: extract (parsing2.c:137)
==129828==    by 0x109751: map_handling (parsing1.c:110)
==129828==    by 0x1092FF: main (main.c:24)
==129828== 
==129828== LEAK SUMMARY:
==129828==    definitely lost: 29 bytes in 1 blocks
==129828==    indirectly lost: 0 bytes in 0 blocks
==129828==      possibly lost: 0 bytes in 0 blocks
==129828==    still reachable: 0 bytes in 0 blocks
==129828==         suppressed: 0 bytes in 0 blocks
==129828== 
==129828== For lists of detected and suppressed errors, rerun with: -s
==129828== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite2.cub...
###########################################################################
==129837== Memcheck, a memory error detector
==129837== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129837== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129837== Command: ../cub3D error_test/extra_sprite2.cub
==129837== 
==129837== Warning: invalid file descriptor -1 in syscall close()
executed to the end
==129837== 
==129837== HEAP SUMMARY:
==129837==     in use at exit: 0 bytes in 0 blocks
==129837==   total heap usage: 422 allocs, 422 frees, 11,603 bytes allocated
==129837== 
==129837== All heap blocks were freed -- no leaks are possible
==129837== 
==129837== For lists of detected and suppressed errors, rerun with: -s
==129837== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/sprite_wrong1.cub...
###########################################################################
==129846== Memcheck, a memory error detector
==129846== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129846== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129846== Command: ../cub3D error_test/sprite_wrong1.cub
==129846== 
==129846== Warning: invalid file descriptor -1 in syscall close()
executed to the end
==129846== 
==129846== HEAP SUMMARY:
==129846==     in use at exit: 0 bytes in 0 blocks
==129846==   total heap usage: 422 allocs, 422 frees, 11,603 bytes allocated
==129846== 
==129846== All heap blocks were freed -- no leaks are possible
==129846== 
==129846== For lists of detected and suppressed errors, rerun with: -s
==129846== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap1.cub...
###########################################################################
==129855== Memcheck, a memory error detector
==129855== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129855== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129855== Command: ../cub3D error_test/wrongmap1.cub
==129855== 
==129855== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129855== 
==129855== HEAP SUMMARY:
==129855==     in use at exit: 0 bytes in 0 blocks
==129855==   total heap usage: 355 allocs, 355 frees, 5,719 bytes allocated
==129855== 
==129855== All heap blocks were freed -- no leaks are possible
==129855== 
==129855== For lists of detected and suppressed errors, rerun with: -s
==129855== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap2.cub...
###########################################################################
==129864== Memcheck, a memory error detector
==129864== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129864== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129864== Command: ../cub3D error_test/wrongmap2.cub
==129864== 
==129864== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129864== 
==129864== HEAP SUMMARY:
==129864==     in use at exit: 0 bytes in 0 blocks
==129864==   total heap usage: 365 allocs, 365 frees, 5,841 bytes allocated
==129864== 
==129864== All heap blocks were freed -- no leaks are possible
==129864== 
==129864== For lists of detected and suppressed errors, rerun with: -s
==129864== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB1.cub...
###########################################################################
==129884== Memcheck, a memory error detector
==129884== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129884== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129884== Command: ../cub3D error_test/missing_RGB1.cub
==129884== 
==129884== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129884== 
==129884== HEAP SUMMARY:
==129884==     in use at exit: 0 bytes in 0 blocks
==129884==   total heap usage: 335 allocs, 335 frees, 5,435 bytes allocated
==129884== 
==129884== All heap blocks were freed -- no leaks are possible
==129884== 
==129884== For lists of detected and suppressed errors, rerun with: -s
==129884== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB2.cub...
###########################################################################
==129893== Memcheck, a memory error detector
==129893== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129893== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129893== Command: ../cub3D error_test/missing_RGB2.cub
==129893== 
==129893== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129893== 
==129893== HEAP SUMMARY:
==129893==     in use at exit: 0 bytes in 0 blocks
==129893==   total heap usage: 345 allocs, 345 frees, 5,575 bytes allocated
==129893== 
==129893== All heap blocks were freed -- no leaks are possible
==129893== 
==129893== For lists of detected and suppressed errors, rerun with: -s
==129893== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB3.cub...
###########################################################################
==129902== Memcheck, a memory error detector
==129902== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129902== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129902== Command: ../cub3D error_test/missing_RGB3.cub
==129902== 
==129902== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129902== 
==129902== HEAP SUMMARY:
==129902==     in use at exit: 0 bytes in 0 blocks
==129902==   total heap usage: 354 allocs, 354 frees, 5,681 bytes allocated
==129902== 
==129902== All heap blocks were freed -- no leaks are possible
==129902== 
==129902== For lists of detected and suppressed errors, rerun with: -s
==129902== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB1.cub...
###########################################################################
==129911== Memcheck, a memory error detector
==129911== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129911== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129911== Command: ../cub3D error_test/wrong_RGB1.cub
==129911== 
==129911== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129911== 
==129911== HEAP SUMMARY:
==129911==     in use at exit: 0 bytes in 0 blocks
==129911==   total heap usage: 355 allocs, 355 frees, 5,719 bytes allocated
==129911== 
==129911== All heap blocks were freed -- no leaks are possible
==129911== 
==129911== For lists of detected and suppressed errors, rerun with: -s
==129911== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB2.cub...
###########################################################################
==129920== Memcheck, a memory error detector
==129920== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129920== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129920== Command: ../cub3D error_test/wrong_RGB2.cub
==129920== 
==129920== Warning: invalid file descriptor -1 in syscall close()
==129920== Invalid read of size 8
==129920==    at 0x10A669: break_commas (parsing_utils1.c:81)
==129920==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129920==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129920==    by 0x109934: floor_information (parsing2.c:30)
==129920==    by 0x109CE7: extract (parsing2.c:133)
==129920==    by 0x109751: map_handling (parsing1.c:110)
==129920==    by 0x1092FF: main (main.c:24)
==129920==  Address 0x4a83708 is 8 bytes after a block of size 16 alloc'd
==129920==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==129920==    by 0x10BEDE: ft_split (ft_split.c:67)
==129920==    by 0x10A640: break_commas (parsing_utils1.c:78)
==129920==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129920==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129920==    by 0x109934: floor_information (parsing2.c:30)
==129920==    by 0x109CE7: extract (parsing2.c:133)
==129920==    by 0x109751: map_handling (parsing1.c:110)
==129920==    by 0x1092FF: main (main.c:24)
==129920== 
==129920== Invalid read of size 1
==129920==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==129920==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==129920==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==129920==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129920==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129920==    by 0x109934: floor_information (parsing2.c:30)
==129920==    by 0x109CE7: extract (parsing2.c:133)
==129920==    by 0x109751: map_handling (parsing1.c:110)
==129920==    by 0x1092FF: main (main.c:24)
==129920==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==129920== 
==129920== 
==129920== Process terminating with default action of signal 11 (SIGSEGV)
==129920==  Access not within mapped region at address 0x0
==129920==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==129920==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==129920==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==129920==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129920==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129920==    by 0x109934: floor_information (parsing2.c:30)
==129920==    by 0x109CE7: extract (parsing2.c:133)
==129920==    by 0x109751: map_handling (parsing1.c:110)
==129920==    by 0x1092FF: main (main.c:24)
==129920==  If you believe this happened as a result of a stack
==129920==  overflow in your program's main thread (unlikely but
==129920==  possible), you can try to increase the size of the
==129920==  main thread stack using the --main-stacksize= flag.
==129920==  The main thread stack size used in this run was 8388608.
==129920== 
==129920== HEAP SUMMARY:
==129920==     in use at exit: 1,028 bytes in 31 blocks
==129920==   total heap usage: 368 allocs, 337 frees, 5,851 bytes allocated
==129920== 
==129920== LEAK SUMMARY:
==129920==    definitely lost: 0 bytes in 0 blocks
==129920==    indirectly lost: 0 bytes in 0 blocks
==129920==      possibly lost: 0 bytes in 0 blocks
==129920==    still reachable: 1,028 bytes in 31 blocks
==129920==         suppressed: 0 bytes in 0 blocks
==129920== Reachable blocks (those to which a pointer was found) are not shown.
==129920== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==129920== 
==129920== For lists of detected and suppressed errors, rerun with: -s
==129920== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB3.cub...
###########################################################################
==129945== Memcheck, a memory error detector
==129945== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129945== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129945== Command: ../cub3D error_test/wrong_RGB3.cub
==129945== 
==129945== Warning: invalid file descriptor -1 in syscall close()
==129945== Invalid read of size 8
==129945==    at 0x10A669: break_commas (parsing_utils1.c:81)
==129945==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129945==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129945==    by 0x109934: floor_information (parsing2.c:30)
==129945==    by 0x109CE7: extract (parsing2.c:133)
==129945==    by 0x109751: map_handling (parsing1.c:110)
==129945==    by 0x1092FF: main (main.c:24)
==129945==  Address 0x4a839a8 is 8 bytes after a block of size 16 alloc'd
==129945==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==129945==    by 0x10BEDE: ft_split (ft_split.c:67)
==129945==    by 0x10A640: break_commas (parsing_utils1.c:78)
==129945==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129945==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129945==    by 0x109934: floor_information (parsing2.c:30)
==129945==    by 0x109CE7: extract (parsing2.c:133)
==129945==    by 0x109751: map_handling (parsing1.c:110)
==129945==    by 0x1092FF: main (main.c:24)
==129945== 
==129945== Invalid read of size 1
==129945==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==129945==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==129945==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==129945==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129945==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129945==    by 0x109934: floor_information (parsing2.c:30)
==129945==    by 0x109CE7: extract (parsing2.c:133)
==129945==    by 0x109751: map_handling (parsing1.c:110)
==129945==    by 0x1092FF: main (main.c:24)
==129945==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==129945== 
==129945== 
==129945== Process terminating with default action of signal 11 (SIGSEGV)
==129945==  Access not within mapped region at address 0x0
==129945==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==129945==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==129945==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==129945==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==129945==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==129945==    by 0x109934: floor_information (parsing2.c:30)
==129945==    by 0x109CE7: extract (parsing2.c:133)
==129945==    by 0x109751: map_handling (parsing1.c:110)
==129945==    by 0x1092FF: main (main.c:24)
==129945==  If you believe this happened as a result of a stack
==129945==  overflow in your program's main thread (unlikely but
==129945==  possible), you can try to increase the size of the
==129945==  main thread stack using the --main-stacksize= flag.
==129945==  The main thread stack size used in this run was 8388608.
==129945== 
==129945== HEAP SUMMARY:
==129945==     in use at exit: 1,048 bytes in 31 blocks
==129945==   total heap usage: 376 allocs, 345 frees, 5,999 bytes allocated
==129945== 
==129945== LEAK SUMMARY:
==129945==    definitely lost: 0 bytes in 0 blocks
==129945==    indirectly lost: 0 bytes in 0 blocks
==129945==      possibly lost: 0 bytes in 0 blocks
==129945==    still reachable: 1,048 bytes in 31 blocks
==129945==         suppressed: 0 bytes in 0 blocks
==129945== Reachable blocks (those to which a pointer was found) are not shown.
==129945== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==129945== 
==129945== For lists of detected and suppressed errors, rerun with: -s
==129945== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player1.cub...
###########################################################################
==129971== Memcheck, a memory error detector
==129971== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129971== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129971== Command: ../cub3D error_test/extra_player1.cub
==129971== 
==129971== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129971== 
==129971== HEAP SUMMARY:
==129971==     in use at exit: 0 bytes in 0 blocks
==129971==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==129971== 
==129971== All heap blocks were freed -- no leaks are possible
==129971== 
==129971== For lists of detected and suppressed errors, rerun with: -s
==129971== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player2.cub...
###########################################################################
==129980== Memcheck, a memory error detector
==129980== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129980== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129980== Command: ../cub3D error_test/extra_player2.cub
==129980== 
==129980== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129980== 
==129980== HEAP SUMMARY:
==129980==     in use at exit: 0 bytes in 0 blocks
==129980==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==129980== 
==129980== All heap blocks were freed -- no leaks are possible
==129980== 
==129980== For lists of detected and suppressed errors, rerun with: -s
==129980== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player3.cub...
###########################################################################
==129989== Memcheck, a memory error detector
==129989== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129989== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129989== Command: ../cub3D error_test/extra_player3.cub
==129989== 
==129989== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129989== 
==129989== HEAP SUMMARY:
==129989==     in use at exit: 0 bytes in 0 blocks
==129989==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==129989== 
==129989== All heap blocks were freed -- no leaks are possible
==129989== 
==129989== For lists of detected and suppressed errors, rerun with: -s
==129989== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player4.cub...
###########################################################################
==129998== Memcheck, a memory error detector
==129998== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==129998== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==129998== Command: ../cub3D error_test/extra_player4.cub
==129998== 
==129998== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==129998== 
==129998== HEAP SUMMARY:
==129998==     in use at exit: 0 bytes in 0 blocks
==129998==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==129998== 
==129998== All heap blocks were freed -- no leaks are possible
==129998== 
==129998== For lists of detected and suppressed errors, rerun with: -s
==129998== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player5.cub...
###########################################################################
==130007== Memcheck, a memory error detector
==130007== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==130007== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==130007== Command: ../cub3D error_test/extra_player5.cub
==130007== 
==130007== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==130007== 
==130007== HEAP SUMMARY:
==130007==     in use at exit: 0 bytes in 0 blocks
==130007==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==130007== 
==130007== All heap blocks were freed -- no leaks are possible
==130007== 
==130007== For lists of detected and suppressed errors, rerun with: -s
==130007== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player6.cub...
###########################################################################
==130020== Memcheck, a memory error detector
==130020== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==130020== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==130020== Command: ../cub3D error_test/extra_player6.cub
==130020== 
==130020== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==130020== 
==130020== HEAP SUMMARY:
==130020==     in use at exit: 0 bytes in 0 blocks
==130020==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==130020== 
==130020== All heap blocks were freed -- no leaks are possible
==130020== 
==130020== For lists of detected and suppressed errors, rerun with: -s
==130020== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player7.cub...
###########################################################################
==130032== Memcheck, a memory error detector
==130032== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==130032== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==130032== Command: ../cub3D error_test/extra_player7.cub
==130032== 
==130032== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==130032== 
==130032== HEAP SUMMARY:
==130032==     in use at exit: 0 bytes in 0 blocks
==130032==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==130032== 
==130032== All heap blocks were freed -- no leaks are possible
==130032== 
==130032== For lists of detected and suppressed errors, rerun with: -s
==130032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player8.cub...
###########################################################################
==130053== Memcheck, a memory error detector
==130053== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==130053== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==130053== Command: ../cub3D error_test/extra_player8.cub
==130053== 
==130053== Warning: invalid file descriptor -1 in syscall close()
Error
Map is broken ):

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==130053== 
==130053== HEAP SUMMARY:
==130053==     in use at exit: 0 bytes in 0 blocks
==130053==   total heap usage: 273 allocs, 273 frees, 4,532 bytes allocated
==130053== 
==130053== All heap blocks were freed -- no leaks are possible
==130053== 
==130053== For lists of detected and suppressed errors, rerun with: -s
==130053== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


