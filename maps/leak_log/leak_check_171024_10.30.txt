Running test for error_test/extra_RGB1.cub...
###########################################################################
==240285== Memcheck, a memory error detector
==240285== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240285== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240285== Command: ../cub3D error_test/extra_RGB1.cub
==240285== 
==240285== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240285== 
==240285== HEAP SUMMARY:
==240285==     in use at exit: 0 bytes in 0 blocks
==240285==   total heap usage: 392 allocs, 392 frees, 6,161 bytes allocated
==240285== 
==240285== All heap blocks were freed -- no leaks are possible
==240285== 
==240285== For lists of detected and suppressed errors, rerun with: -s
==240285== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB2.cub...
###########################################################################
==240295== Memcheck, a memory error detector
==240295== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240295== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240295== Command: ../cub3D error_test/extra_RGB2.cub
==240295== 
==240295== Warning: invalid file descriptor -1 in syscall close()
==240295== Invalid read of size 8
==240295==    at 0x402729: break_commas (parsing_utils1.c:81)
==240295==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240295==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240295==    by 0x401976: floor_information (parsing2.c:30)
==240295==    by 0x4017C4: extract (parsing2.c:133)
==240295==    by 0x401416: map_handling (parsing1.c:110)
==240295==    by 0x40121A: main (main.c:24)
==240295==  Address 0x4aa4b78 is 8 bytes after a block of size 16 alloc'd
==240295==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==240295==    by 0x403ECB: ft_split (ft_split.c:67)
==240295==    by 0x402700: break_commas (parsing_utils1.c:78)
==240295==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240295==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240295==    by 0x401976: floor_information (parsing2.c:30)
==240295==    by 0x4017C4: extract (parsing2.c:133)
==240295==    by 0x401416: map_handling (parsing1.c:110)
==240295==    by 0x40121A: main (main.c:24)
==240295== 
==240295== Invalid read of size 1
==240295==    at 0x403D2B: ft_atoi (ft_atoi.c:20)
==240295==    by 0x4028DE: rgb_assignment (parsing_utils2.c:44)
==240295==    by 0x402774: break_commas (parsing_utils1.c:86)
==240295==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240295==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240295==    by 0x401976: floor_information (parsing2.c:30)
==240295==    by 0x4017C4: extract (parsing2.c:133)
==240295==    by 0x401416: map_handling (parsing1.c:110)
==240295==    by 0x40121A: main (main.c:24)
==240295==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==240295== 
==240295== 
==240295== Process terminating with default action of signal 11 (SIGSEGV)
==240295==  Access not within mapped region at address 0x0
==240295==    at 0x403D2B: ft_atoi (ft_atoi.c:20)
==240295==    by 0x4028DE: rgb_assignment (parsing_utils2.c:44)
==240295==    by 0x402774: break_commas (parsing_utils1.c:86)
==240295==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240295==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240295==    by 0x401976: floor_information (parsing2.c:30)
==240295==    by 0x4017C4: extract (parsing2.c:133)
==240295==    by 0x401416: map_handling (parsing1.c:110)
==240295==    by 0x40121A: main (main.c:24)
==240295==  If you believe this happened as a result of a stack
==240295==  overflow in your program's main thread (unlikely but
==240295==  possible), you can try to increase the size of the
==240295==  main thread stack using the --main-stacksize= flag.
==240295==  The main thread stack size used in this run was 8388608.
==240295== 
==240295== HEAP SUMMARY:
==240295==     in use at exit: 1,049 bytes in 32 blocks
==240295==   total heap usage: 382 allocs, 350 frees, 6,047 bytes allocated
==240295== 
==240295== LEAK SUMMARY:
==240295==    definitely lost: 0 bytes in 0 blocks
==240295==    indirectly lost: 0 bytes in 0 blocks
==240295==      possibly lost: 0 bytes in 0 blocks
==240295==    still reachable: 1,049 bytes in 32 blocks
==240295==         suppressed: 0 bytes in 0 blocks
==240295== Reachable blocks (those to which a pointer was found) are not shown.
==240295== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==240295== 
==240295== For lists of detected and suppressed errors, rerun with: -s
==240295== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB3.cub...
###########################################################################
==240317== Memcheck, a memory error detector
==240317== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240317== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240317== Command: ../cub3D error_test/extra_RGB3.cub
==240317== 
==240317== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240317== 
==240317== HEAP SUMMARY:
==240317==     in use at exit: 65 bytes in 5 blocks
==240317==   total heap usage: 375 allocs, 370 frees, 6,008 bytes allocated
==240317== 
==240317== LEAK SUMMARY:
==240317==    definitely lost: 0 bytes in 0 blocks
==240317==    indirectly lost: 0 bytes in 0 blocks
==240317==      possibly lost: 0 bytes in 0 blocks
==240317==    still reachable: 65 bytes in 5 blocks
==240317==         suppressed: 0 bytes in 0 blocks
==240317== Reachable blocks (those to which a pointer was found) are not shown.
==240317== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==240317== 
==240317== For lists of detected and suppressed errors, rerun with: -s
==240317== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB4.cub...
###########################################################################
==240328== Memcheck, a memory error detector
==240328== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240328== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240328== Command: ../cub3D error_test/extra_RGB4.cub
==240328== 
==240328== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240328== 
==240328== HEAP SUMMARY:
==240328==     in use at exit: 0 bytes in 0 blocks
==240328==   total heap usage: 377 allocs, 377 frees, 6,025 bytes allocated
==240328== 
==240328== All heap blocks were freed -- no leaks are possible
==240328== 
==240328== For lists of detected and suppressed errors, rerun with: -s
==240328== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB5.cub...
###########################################################################
==240337== Memcheck, a memory error detector
==240337== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240337== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240337== Command: ../cub3D error_test/extra_RGB5.cub
==240337== 
==240337== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240337== 
==240337== HEAP SUMMARY:
==240337==     in use at exit: 0 bytes in 0 blocks
==240337==   total heap usage: 386 allocs, 386 frees, 6,113 bytes allocated
==240337== 
==240337== All heap blocks were freed -- no leaks are possible
==240337== 
==240337== For lists of detected and suppressed errors, rerun with: -s
==240337== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite1.cub...
###########################################################################
==240350== Memcheck, a memory error detector
==240350== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240350== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240350== Command: ../cub3D error_test/extra_sprite1.cub
==240350== 
==240350== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240350== 
==240350== HEAP SUMMARY:
==240350==     in use at exit: 29 bytes in 1 blocks
==240350==   total heap usage: 395 allocs, 394 frees, 6,331 bytes allocated
==240350== 
==240350== 29 bytes in 1 blocks are definitely lost in loss record 1 of 1
==240350==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==240350==    by 0x403AEB: ft_strdup (ft_strdup.c:26)
==240350==    by 0x401EF9: no_sprite (parsing3.c:31)
==240350==    by 0x401D24: search_sprites (parsing3.c:148)
==240350==    by 0x401B54: sprites_information (parsing2.c:75)
==240350==    by 0x401800: extract (parsing2.c:137)
==240350==    by 0x401416: map_handling (parsing1.c:110)
==240350==    by 0x40121A: main (main.c:24)
==240350== 
==240350== LEAK SUMMARY:
==240350==    definitely lost: 29 bytes in 1 blocks
==240350==    indirectly lost: 0 bytes in 0 blocks
==240350==      possibly lost: 0 bytes in 0 blocks
==240350==    still reachable: 0 bytes in 0 blocks
==240350==         suppressed: 0 bytes in 0 blocks
==240350== 
==240350== For lists of detected and suppressed errors, rerun with: -s
==240350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite2.cub...
###########################################################################
==240363== Memcheck, a memory error detector
==240363== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240363== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240363== Command: ../cub3D error_test/extra_sprite2.cub
==240363== 
==240363== Warning: invalid file descriptor -1 in syscall close()
executed to the end
==240363== 
==240363== HEAP SUMMARY:
==240363==     in use at exit: 0 bytes in 0 blocks
==240363==   total heap usage: 422 allocs, 422 frees, 11,603 bytes allocated
==240363== 
==240363== All heap blocks were freed -- no leaks are possible
==240363== 
==240363== For lists of detected and suppressed errors, rerun with: -s
==240363== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/sprite_wrong1.cub...
###########################################################################
==240372== Memcheck, a memory error detector
==240372== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240372== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240372== Command: ../cub3D error_test/sprite_wrong1.cub
==240372== 
==240372== Warning: invalid file descriptor -1 in syscall close()
executed to the end
==240372== 
==240372== HEAP SUMMARY:
==240372==     in use at exit: 0 bytes in 0 blocks
==240372==   total heap usage: 422 allocs, 422 frees, 11,603 bytes allocated
==240372== 
==240372== All heap blocks were freed -- no leaks are possible
==240372== 
==240372== For lists of detected and suppressed errors, rerun with: -s
==240372== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap1.cub...
###########################################################################
==240381== Memcheck, a memory error detector
==240381== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240381== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240381== Command: ../cub3D error_test/wrongmap1.cub
==240381== 
==240381== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240381== 
==240381== HEAP SUMMARY:
==240381==     in use at exit: 0 bytes in 0 blocks
==240381==   total heap usage: 355 allocs, 355 frees, 5,719 bytes allocated
==240381== 
==240381== All heap blocks were freed -- no leaks are possible
==240381== 
==240381== For lists of detected and suppressed errors, rerun with: -s
==240381== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap2.cub...
###########################################################################
==240390== Memcheck, a memory error detector
==240390== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240390== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240390== Command: ../cub3D error_test/wrongmap2.cub
==240390== 
==240390== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240390== 
==240390== HEAP SUMMARY:
==240390==     in use at exit: 0 bytes in 0 blocks
==240390==   total heap usage: 365 allocs, 365 frees, 5,841 bytes allocated
==240390== 
==240390== All heap blocks were freed -- no leaks are possible
==240390== 
==240390== For lists of detected and suppressed errors, rerun with: -s
==240390== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB1.cub...
###########################################################################
==240399== Memcheck, a memory error detector
==240399== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240399== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240399== Command: ../cub3D error_test/missing_RGB1.cub
==240399== 
==240399== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240399== 
==240399== HEAP SUMMARY:
==240399==     in use at exit: 0 bytes in 0 blocks
==240399==   total heap usage: 335 allocs, 335 frees, 5,435 bytes allocated
==240399== 
==240399== All heap blocks were freed -- no leaks are possible
==240399== 
==240399== For lists of detected and suppressed errors, rerun with: -s
==240399== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB2.cub...
###########################################################################
==240408== Memcheck, a memory error detector
==240408== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240408== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240408== Command: ../cub3D error_test/missing_RGB2.cub
==240408== 
==240408== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240408== 
==240408== HEAP SUMMARY:
==240408==     in use at exit: 0 bytes in 0 blocks
==240408==   total heap usage: 345 allocs, 345 frees, 5,575 bytes allocated
==240408== 
==240408== All heap blocks were freed -- no leaks are possible
==240408== 
==240408== For lists of detected and suppressed errors, rerun with: -s
==240408== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB3.cub...
###########################################################################
==240417== Memcheck, a memory error detector
==240417== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240417== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240417== Command: ../cub3D error_test/missing_RGB3.cub
==240417== 
==240417== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240417== 
==240417== HEAP SUMMARY:
==240417==     in use at exit: 0 bytes in 0 blocks
==240417==   total heap usage: 354 allocs, 354 frees, 5,681 bytes allocated
==240417== 
==240417== All heap blocks were freed -- no leaks are possible
==240417== 
==240417== For lists of detected and suppressed errors, rerun with: -s
==240417== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB1.cub...
###########################################################################
==240426== Memcheck, a memory error detector
==240426== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240426== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240426== Command: ../cub3D error_test/wrong_RGB1.cub
==240426== 
==240426== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240426== 
==240426== HEAP SUMMARY:
==240426==     in use at exit: 0 bytes in 0 blocks
==240426==   total heap usage: 355 allocs, 355 frees, 5,719 bytes allocated
==240426== 
==240426== All heap blocks were freed -- no leaks are possible
==240426== 
==240426== For lists of detected and suppressed errors, rerun with: -s
==240426== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB2.cub...
###########################################################################
==240435== Memcheck, a memory error detector
==240435== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240435== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240435== Command: ../cub3D error_test/wrong_RGB2.cub
==240435== 
==240435== Warning: invalid file descriptor -1 in syscall close()
==240435== Invalid read of size 8
==240435==    at 0x402729: break_commas (parsing_utils1.c:81)
==240435==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240435==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240435==    by 0x401976: floor_information (parsing2.c:30)
==240435==    by 0x4017C4: extract (parsing2.c:133)
==240435==    by 0x401416: map_handling (parsing1.c:110)
==240435==    by 0x40121A: main (main.c:24)
==240435==  Address 0x4aa4708 is 8 bytes after a block of size 16 alloc'd
==240435==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==240435==    by 0x403ECB: ft_split (ft_split.c:67)
==240435==    by 0x402700: break_commas (parsing_utils1.c:78)
==240435==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240435==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240435==    by 0x401976: floor_information (parsing2.c:30)
==240435==    by 0x4017C4: extract (parsing2.c:133)
==240435==    by 0x401416: map_handling (parsing1.c:110)
==240435==    by 0x40121A: main (main.c:24)
==240435== 
==240435== Invalid read of size 1
==240435==    at 0x403D2B: ft_atoi (ft_atoi.c:20)
==240435==    by 0x4028DE: rgb_assignment (parsing_utils2.c:44)
==240435==    by 0x402774: break_commas (parsing_utils1.c:86)
==240435==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240435==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240435==    by 0x401976: floor_information (parsing2.c:30)
==240435==    by 0x4017C4: extract (parsing2.c:133)
==240435==    by 0x401416: map_handling (parsing1.c:110)
==240435==    by 0x40121A: main (main.c:24)
==240435==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==240435== 
==240435== 
==240435== Process terminating with default action of signal 11 (SIGSEGV)
==240435==  Access not within mapped region at address 0x0
==240435==    at 0x403D2B: ft_atoi (ft_atoi.c:20)
==240435==    by 0x4028DE: rgb_assignment (parsing_utils2.c:44)
==240435==    by 0x402774: break_commas (parsing_utils1.c:86)
==240435==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240435==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240435==    by 0x401976: floor_information (parsing2.c:30)
==240435==    by 0x4017C4: extract (parsing2.c:133)
==240435==    by 0x401416: map_handling (parsing1.c:110)
==240435==    by 0x40121A: main (main.c:24)
==240435==  If you believe this happened as a result of a stack
==240435==  overflow in your program's main thread (unlikely but
==240435==  possible), you can try to increase the size of the
==240435==  main thread stack using the --main-stacksize= flag.
==240435==  The main thread stack size used in this run was 8388608.
==240435== 
==240435== HEAP SUMMARY:
==240435==     in use at exit: 1,028 bytes in 31 blocks
==240435==   total heap usage: 368 allocs, 337 frees, 5,851 bytes allocated
==240435== 
==240435== LEAK SUMMARY:
==240435==    definitely lost: 0 bytes in 0 blocks
==240435==    indirectly lost: 0 bytes in 0 blocks
==240435==      possibly lost: 0 bytes in 0 blocks
==240435==    still reachable: 1,028 bytes in 31 blocks
==240435==         suppressed: 0 bytes in 0 blocks
==240435== Reachable blocks (those to which a pointer was found) are not shown.
==240435== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==240435== 
==240435== For lists of detected and suppressed errors, rerun with: -s
==240435== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB3.cub...
###########################################################################
==240449== Memcheck, a memory error detector
==240449== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240449== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240449== Command: ../cub3D error_test/wrong_RGB3.cub
==240449== 
==240449== Warning: invalid file descriptor -1 in syscall close()
==240449== Invalid read of size 8
==240449==    at 0x402729: break_commas (parsing_utils1.c:81)
==240449==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240449==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240449==    by 0x401976: floor_information (parsing2.c:30)
==240449==    by 0x4017C4: extract (parsing2.c:133)
==240449==    by 0x401416: map_handling (parsing1.c:110)
==240449==    by 0x40121A: main (main.c:24)
==240449==  Address 0x4aa49a8 is 8 bytes after a block of size 16 alloc'd
==240449==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==240449==    by 0x403ECB: ft_split (ft_split.c:67)
==240449==    by 0x402700: break_commas (parsing_utils1.c:78)
==240449==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240449==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240449==    by 0x401976: floor_information (parsing2.c:30)
==240449==    by 0x4017C4: extract (parsing2.c:133)
==240449==    by 0x401416: map_handling (parsing1.c:110)
==240449==    by 0x40121A: main (main.c:24)
==240449== 
==240449== Invalid read of size 1
==240449==    at 0x403D2B: ft_atoi (ft_atoi.c:20)
==240449==    by 0x4028DE: rgb_assignment (parsing_utils2.c:44)
==240449==    by 0x402774: break_commas (parsing_utils1.c:86)
==240449==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240449==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240449==    by 0x401976: floor_information (parsing2.c:30)
==240449==    by 0x4017C4: extract (parsing2.c:133)
==240449==    by 0x401416: map_handling (parsing1.c:110)
==240449==    by 0x40121A: main (main.c:24)
==240449==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==240449== 
==240449== 
==240449== Process terminating with default action of signal 11 (SIGSEGV)
==240449==  Access not within mapped region at address 0x0
==240449==    at 0x403D2B: ft_atoi (ft_atoi.c:20)
==240449==    by 0x4028DE: rgb_assignment (parsing_utils2.c:44)
==240449==    by 0x402774: break_commas (parsing_utils1.c:86)
==240449==    by 0x4026A3: separate_rgb (parsing_utils1.c:105)
==240449==    by 0x402609: rgb_parse (parsing_utils1.c:152)
==240449==    by 0x401976: floor_information (parsing2.c:30)
==240449==    by 0x4017C4: extract (parsing2.c:133)
==240449==    by 0x401416: map_handling (parsing1.c:110)
==240449==    by 0x40121A: main (main.c:24)
==240449==  If you believe this happened as a result of a stack
==240449==  overflow in your program's main thread (unlikely but
==240449==  possible), you can try to increase the size of the
==240449==  main thread stack using the --main-stacksize= flag.
==240449==  The main thread stack size used in this run was 8388608.
==240449== 
==240449== HEAP SUMMARY:
==240449==     in use at exit: 1,048 bytes in 31 blocks
==240449==   total heap usage: 376 allocs, 345 frees, 5,999 bytes allocated
==240449== 
==240449== LEAK SUMMARY:
==240449==    definitely lost: 0 bytes in 0 blocks
==240449==    indirectly lost: 0 bytes in 0 blocks
==240449==      possibly lost: 0 bytes in 0 blocks
==240449==    still reachable: 1,048 bytes in 31 blocks
==240449==         suppressed: 0 bytes in 0 blocks
==240449== Reachable blocks (those to which a pointer was found) are not shown.
==240449== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==240449== 
==240449== For lists of detected and suppressed errors, rerun with: -s
==240449== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player1.cub...
###########################################################################
==240469== Memcheck, a memory error detector
==240469== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240469== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240469== Command: ../cub3D error_test/extra_player1.cub
==240469== 
==240469== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240469== 
==240469== HEAP SUMMARY:
==240469==     in use at exit: 0 bytes in 0 blocks
==240469==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240469== 
==240469== All heap blocks were freed -- no leaks are possible
==240469== 
==240469== For lists of detected and suppressed errors, rerun with: -s
==240469== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player2.cub...
###########################################################################
==240478== Memcheck, a memory error detector
==240478== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240478== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240478== Command: ../cub3D error_test/extra_player2.cub
==240478== 
==240478== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240478== 
==240478== HEAP SUMMARY:
==240478==     in use at exit: 0 bytes in 0 blocks
==240478==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240478== 
==240478== All heap blocks were freed -- no leaks are possible
==240478== 
==240478== For lists of detected and suppressed errors, rerun with: -s
==240478== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player3.cub...
###########################################################################
==240487== Memcheck, a memory error detector
==240487== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240487== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240487== Command: ../cub3D error_test/extra_player3.cub
==240487== 
==240487== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240487== 
==240487== HEAP SUMMARY:
==240487==     in use at exit: 0 bytes in 0 blocks
==240487==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240487== 
==240487== All heap blocks were freed -- no leaks are possible
==240487== 
==240487== For lists of detected and suppressed errors, rerun with: -s
==240487== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player4.cub...
###########################################################################
==240497== Memcheck, a memory error detector
==240497== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240497== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240497== Command: ../cub3D error_test/extra_player4.cub
==240497== 
==240497== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240497== 
==240497== HEAP SUMMARY:
==240497==     in use at exit: 0 bytes in 0 blocks
==240497==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240497== 
==240497== All heap blocks were freed -- no leaks are possible
==240497== 
==240497== For lists of detected and suppressed errors, rerun with: -s
==240497== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player5.cub...
###########################################################################
==240506== Memcheck, a memory error detector
==240506== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240506== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240506== Command: ../cub3D error_test/extra_player5.cub
==240506== 
==240506== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240506== 
==240506== HEAP SUMMARY:
==240506==     in use at exit: 0 bytes in 0 blocks
==240506==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240506== 
==240506== All heap blocks were freed -- no leaks are possible
==240506== 
==240506== For lists of detected and suppressed errors, rerun with: -s
==240506== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player6.cub...
###########################################################################
==240515== Memcheck, a memory error detector
==240515== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240515== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240515== Command: ../cub3D error_test/extra_player6.cub
==240515== 
==240515== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240515== 
==240515== HEAP SUMMARY:
==240515==     in use at exit: 0 bytes in 0 blocks
==240515==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240515== 
==240515== All heap blocks were freed -- no leaks are possible
==240515== 
==240515== For lists of detected and suppressed errors, rerun with: -s
==240515== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player7.cub...
###########################################################################
==240524== Memcheck, a memory error detector
==240524== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240524== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240524== Command: ../cub3D error_test/extra_player7.cub
==240524== 
==240524== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240524== 
==240524== HEAP SUMMARY:
==240524==     in use at exit: 0 bytes in 0 blocks
==240524==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==240524== 
==240524== All heap blocks were freed -- no leaks are possible
==240524== 
==240524== For lists of detected and suppressed errors, rerun with: -s
==240524== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player8.cub...
###########################################################################
==240533== Memcheck, a memory error detector
==240533== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==240533== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==240533== Command: ../cub3D error_test/extra_player8.cub
==240533== 
==240533== Warning: invalid file descriptor -1 in syscall close()
Error
Map is broken ):

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==240533== 
==240533== HEAP SUMMARY:
==240533==     in use at exit: 0 bytes in 0 blocks
==240533==   total heap usage: 273 allocs, 273 frees, 4,532 bytes allocated
==240533== 
==240533== All heap blocks were freed -- no leaks are possible
==240533== 
==240533== For lists of detected and suppressed errors, rerun with: -s
==240533== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


