Running test for error_test/extra_RGB1.cub...
###########################################################################
==128029== Memcheck, a memory error detector
==128029== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128029== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128029== Command: ../cub3D error_test/extra_RGB1.cub
==128029== 
==128029== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128029== 
==128029== HEAP SUMMARY:
==128029==     in use at exit: 0 bytes in 0 blocks
==128029==   total heap usage: 392 allocs, 392 frees, 6,161 bytes allocated
==128029== 
==128029== All heap blocks were freed -- no leaks are possible
==128029== 
==128029== For lists of detected and suppressed errors, rerun with: -s
==128029== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB2.cub...
###########################################################################
==128038== Memcheck, a memory error detector
==128038== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128038== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128038== Command: ../cub3D error_test/extra_RGB2.cub
==128038== 
==128038== Warning: invalid file descriptor -1 in syscall close()
==128038== Invalid read of size 8
==128038==    at 0x10A669: break_commas (parsing_utils1.c:81)
==128038==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128038==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128038==    by 0x109934: floor_information (parsing2.c:30)
==128038==    by 0x109CE7: extract (parsing2.c:133)
==128038==    by 0x109751: map_handling (parsing1.c:110)
==128038==    by 0x1092FF: main (main.c:24)
==128038==  Address 0x4a83b78 is 8 bytes after a block of size 16 alloc'd
==128038==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==128038==    by 0x10BEDE: ft_split (ft_split.c:67)
==128038==    by 0x10A640: break_commas (parsing_utils1.c:78)
==128038==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128038==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128038==    by 0x109934: floor_information (parsing2.c:30)
==128038==    by 0x109CE7: extract (parsing2.c:133)
==128038==    by 0x109751: map_handling (parsing1.c:110)
==128038==    by 0x1092FF: main (main.c:24)
==128038== 
==128038== Invalid read of size 1
==128038==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==128038==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==128038==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==128038==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128038==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128038==    by 0x109934: floor_information (parsing2.c:30)
==128038==    by 0x109CE7: extract (parsing2.c:133)
==128038==    by 0x109751: map_handling (parsing1.c:110)
==128038==    by 0x1092FF: main (main.c:24)
==128038==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==128038== 
==128038== 
==128038== Process terminating with default action of signal 11 (SIGSEGV)
==128038==  Access not within mapped region at address 0x0
==128038==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==128038==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==128038==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==128038==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128038==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128038==    by 0x109934: floor_information (parsing2.c:30)
==128038==    by 0x109CE7: extract (parsing2.c:133)
==128038==    by 0x109751: map_handling (parsing1.c:110)
==128038==    by 0x1092FF: main (main.c:24)
==128038==  If you believe this happened as a result of a stack
==128038==  overflow in your program's main thread (unlikely but
==128038==  possible), you can try to increase the size of the
==128038==  main thread stack using the --main-stacksize= flag.
==128038==  The main thread stack size used in this run was 8388608.
==128038== 
==128038== HEAP SUMMARY:
==128038==     in use at exit: 1,049 bytes in 32 blocks
==128038==   total heap usage: 382 allocs, 350 frees, 6,047 bytes allocated
==128038== 
==128038== LEAK SUMMARY:
==128038==    definitely lost: 0 bytes in 0 blocks
==128038==    indirectly lost: 0 bytes in 0 blocks
==128038==      possibly lost: 0 bytes in 0 blocks
==128038==    still reachable: 1,049 bytes in 32 blocks
==128038==         suppressed: 0 bytes in 0 blocks
==128038== Rerun with --leak-check=full to see details of leaked memory
==128038== 
==128038== For lists of detected and suppressed errors, rerun with: -s
==128038== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB3.cub...
###########################################################################
==128067== Memcheck, a memory error detector
==128067== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128067== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128067== Command: ../cub3D error_test/extra_RGB3.cub
==128067== 
==128067== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128067== 
==128067== HEAP SUMMARY:
==128067==     in use at exit: 65 bytes in 5 blocks
==128067==   total heap usage: 375 allocs, 370 frees, 6,008 bytes allocated
==128067== 
==128067== LEAK SUMMARY:
==128067==    definitely lost: 0 bytes in 0 blocks
==128067==    indirectly lost: 0 bytes in 0 blocks
==128067==      possibly lost: 0 bytes in 0 blocks
==128067==    still reachable: 65 bytes in 5 blocks
==128067==         suppressed: 0 bytes in 0 blocks
==128067== Rerun with --leak-check=full to see details of leaked memory
==128067== 
==128067== For lists of detected and suppressed errors, rerun with: -s
==128067== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB4.cub...
###########################################################################
==128076== Memcheck, a memory error detector
==128076== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128076== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128076== Command: ../cub3D error_test/extra_RGB4.cub
==128076== 
==128076== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128076== 
==128076== HEAP SUMMARY:
==128076==     in use at exit: 0 bytes in 0 blocks
==128076==   total heap usage: 377 allocs, 377 frees, 6,025 bytes allocated
==128076== 
==128076== All heap blocks were freed -- no leaks are possible
==128076== 
==128076== For lists of detected and suppressed errors, rerun with: -s
==128076== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_RGB5.cub...
###########################################################################
==128085== Memcheck, a memory error detector
==128085== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128085== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128085== Command: ../cub3D error_test/extra_RGB5.cub
==128085== 
==128085== Warning: invalid file descriptor -1 in syscall close()
Error
RGB values: for God sake, use F or C to define RGB

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128085== 
==128085== HEAP SUMMARY:
==128085==     in use at exit: 0 bytes in 0 blocks
==128085==   total heap usage: 386 allocs, 386 frees, 6,113 bytes allocated
==128085== 
==128085== All heap blocks were freed -- no leaks are possible
==128085== 
==128085== For lists of detected and suppressed errors, rerun with: -s
==128085== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite1.cub...
###########################################################################
==128094== Memcheck, a memory error detector
==128094== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128094== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128094== Command: ../cub3D error_test/extra_sprite1.cub
==128094== 
==128094== Warning: invalid file descriptor -1 in syscall close()
Error
Extra sprites defined for same direction.

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128094== 
==128094== HEAP SUMMARY:
==128094==     in use at exit: 29 bytes in 1 blocks
==128094==   total heap usage: 395 allocs, 394 frees, 6,331 bytes allocated
==128094== 
==128094== LEAK SUMMARY:
==128094==    definitely lost: 29 bytes in 1 blocks
==128094==    indirectly lost: 0 bytes in 0 blocks
==128094==      possibly lost: 0 bytes in 0 blocks
==128094==    still reachable: 0 bytes in 0 blocks
==128094==         suppressed: 0 bytes in 0 blocks
==128094== Rerun with --leak-check=full to see details of leaked memory
==128094== 
==128094== For lists of detected and suppressed errors, rerun with: -s
==128094== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_sprite2.cub...
###########################################################################
==128103== Memcheck, a memory error detector
==128103== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128103== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128103== Command: ../cub3D error_test/extra_sprite2.cub
==128103== 
==128103== Warning: invalid file descriptor -1 in syscall close()
executed to the end
==128103== 
==128103== HEAP SUMMARY:
==128103==     in use at exit: 0 bytes in 0 blocks
==128103==   total heap usage: 422 allocs, 422 frees, 11,603 bytes allocated
==128103== 
==128103== All heap blocks were freed -- no leaks are possible
==128103== 
==128103== For lists of detected and suppressed errors, rerun with: -s
==128103== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/sprite_wrong1.cub...
###########################################################################
==128123== Memcheck, a memory error detector
==128123== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128123== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128123== Command: ../cub3D error_test/sprite_wrong1.cub
==128123== 
==128123== Warning: invalid file descriptor -1 in syscall close()
executed to the end
==128123== 
==128123== HEAP SUMMARY:
==128123==     in use at exit: 0 bytes in 0 blocks
==128123==   total heap usage: 422 allocs, 422 frees, 11,603 bytes allocated
==128123== 
==128123== All heap blocks were freed -- no leaks are possible
==128123== 
==128123== For lists of detected and suppressed errors, rerun with: -s
==128123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap1.cub...
###########################################################################
==128132== Memcheck, a memory error detector
==128132== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128132== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128132== Command: ../cub3D error_test/wrongmap1.cub
==128132== 
==128132== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128132== 
==128132== HEAP SUMMARY:
==128132==     in use at exit: 0 bytes in 0 blocks
==128132==   total heap usage: 355 allocs, 355 frees, 5,719 bytes allocated
==128132== 
==128132== All heap blocks were freed -- no leaks are possible
==128132== 
==128132== For lists of detected and suppressed errors, rerun with: -s
==128132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrongmap2.cub...
###########################################################################
==128143== Memcheck, a memory error detector
==128143== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128143== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128143== Command: ../cub3D error_test/wrongmap2.cub
==128143== 
==128143== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128143== 
==128143== HEAP SUMMARY:
==128143==     in use at exit: 0 bytes in 0 blocks
==128143==   total heap usage: 365 allocs, 365 frees, 5,841 bytes allocated
==128143== 
==128143== All heap blocks were freed -- no leaks are possible
==128143== 
==128143== For lists of detected and suppressed errors, rerun with: -s
==128143== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB1.cub...
###########################################################################
==128152== Memcheck, a memory error detector
==128152== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128152== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128152== Command: ../cub3D error_test/missing_RGB1.cub
==128152== 
==128152== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128152== 
==128152== HEAP SUMMARY:
==128152==     in use at exit: 0 bytes in 0 blocks
==128152==   total heap usage: 335 allocs, 335 frees, 5,435 bytes allocated
==128152== 
==128152== All heap blocks were freed -- no leaks are possible
==128152== 
==128152== For lists of detected and suppressed errors, rerun with: -s
==128152== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB2.cub...
###########################################################################
==128161== Memcheck, a memory error detector
==128161== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128161== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128161== Command: ../cub3D error_test/missing_RGB2.cub
==128161== 
==128161== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128161== 
==128161== HEAP SUMMARY:
==128161==     in use at exit: 0 bytes in 0 blocks
==128161==   total heap usage: 345 allocs, 345 frees, 5,575 bytes allocated
==128161== 
==128161== All heap blocks were freed -- no leaks are possible
==128161== 
==128161== For lists of detected and suppressed errors, rerun with: -s
==128161== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/missing_RGB3.cub...
###########################################################################
==128170== Memcheck, a memory error detector
==128170== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128170== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128170== Command: ../cub3D error_test/missing_RGB3.cub
==128170== 
==128170== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (ceiling) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128170== 
==128170== HEAP SUMMARY:
==128170==     in use at exit: 0 bytes in 0 blocks
==128170==   total heap usage: 354 allocs, 354 frees, 5,681 bytes allocated
==128170== 
==128170== All heap blocks were freed -- no leaks are possible
==128170== 
==128170== For lists of detected and suppressed errors, rerun with: -s
==128170== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB1.cub...
###########################################################################
==128179== Memcheck, a memory error detector
==128179== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128179== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128179== Command: ../cub3D error_test/wrong_RGB1.cub
==128179== 
==128179== Warning: invalid file descriptor -1 in syscall close()
Error
RGB (floor) extra information present in file

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128179== 
==128179== HEAP SUMMARY:
==128179==     in use at exit: 0 bytes in 0 blocks
==128179==   total heap usage: 355 allocs, 355 frees, 5,719 bytes allocated
==128179== 
==128179== All heap blocks were freed -- no leaks are possible
==128179== 
==128179== For lists of detected and suppressed errors, rerun with: -s
==128179== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB2.cub...
###########################################################################
==128198== Memcheck, a memory error detector
==128198== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128198== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128198== Command: ../cub3D error_test/wrong_RGB2.cub
==128198== 
==128198== Warning: invalid file descriptor -1 in syscall close()
==128198== Invalid read of size 8
==128198==    at 0x10A669: break_commas (parsing_utils1.c:81)
==128198==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128198==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128198==    by 0x109934: floor_information (parsing2.c:30)
==128198==    by 0x109CE7: extract (parsing2.c:133)
==128198==    by 0x109751: map_handling (parsing1.c:110)
==128198==    by 0x1092FF: main (main.c:24)
==128198==  Address 0x4a83708 is 8 bytes after a block of size 16 alloc'd
==128198==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==128198==    by 0x10BEDE: ft_split (ft_split.c:67)
==128198==    by 0x10A640: break_commas (parsing_utils1.c:78)
==128198==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128198==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128198==    by 0x109934: floor_information (parsing2.c:30)
==128198==    by 0x109CE7: extract (parsing2.c:133)
==128198==    by 0x109751: map_handling (parsing1.c:110)
==128198==    by 0x1092FF: main (main.c:24)
==128198== 
==128198== Invalid read of size 1
==128198==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==128198==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==128198==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==128198==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128198==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128198==    by 0x109934: floor_information (parsing2.c:30)
==128198==    by 0x109CE7: extract (parsing2.c:133)
==128198==    by 0x109751: map_handling (parsing1.c:110)
==128198==    by 0x1092FF: main (main.c:24)
==128198==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==128198== 
==128198== 
==128198== Process terminating with default action of signal 11 (SIGSEGV)
==128198==  Access not within mapped region at address 0x0
==128198==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==128198==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==128198==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==128198==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128198==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128198==    by 0x109934: floor_information (parsing2.c:30)
==128198==    by 0x109CE7: extract (parsing2.c:133)
==128198==    by 0x109751: map_handling (parsing1.c:110)
==128198==    by 0x1092FF: main (main.c:24)
==128198==  If you believe this happened as a result of a stack
==128198==  overflow in your program's main thread (unlikely but
==128198==  possible), you can try to increase the size of the
==128198==  main thread stack using the --main-stacksize= flag.
==128198==  The main thread stack size used in this run was 8388608.
==128198== 
==128198== HEAP SUMMARY:
==128198==     in use at exit: 1,028 bytes in 31 blocks
==128198==   total heap usage: 368 allocs, 337 frees, 5,851 bytes allocated
==128198== 
==128198== LEAK SUMMARY:
==128198==    definitely lost: 0 bytes in 0 blocks
==128198==    indirectly lost: 0 bytes in 0 blocks
==128198==      possibly lost: 0 bytes in 0 blocks
==128198==    still reachable: 1,028 bytes in 31 blocks
==128198==         suppressed: 0 bytes in 0 blocks
==128198== Rerun with --leak-check=full to see details of leaked memory
==128198== 
==128198== For lists of detected and suppressed errors, rerun with: -s
==128198== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/wrong_RGB3.cub...
###########################################################################
==128213== Memcheck, a memory error detector
==128213== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128213== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128213== Command: ../cub3D error_test/wrong_RGB3.cub
==128213== 
==128213== Warning: invalid file descriptor -1 in syscall close()
==128213== Invalid read of size 8
==128213==    at 0x10A669: break_commas (parsing_utils1.c:81)
==128213==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128213==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128213==    by 0x109934: floor_information (parsing2.c:30)
==128213==    by 0x109CE7: extract (parsing2.c:133)
==128213==    by 0x109751: map_handling (parsing1.c:110)
==128213==    by 0x1092FF: main (main.c:24)
==128213==  Address 0x4a839a8 is 8 bytes after a block of size 16 alloc'd
==128213==    at 0x4845828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==128213==    by 0x10BEDE: ft_split (ft_split.c:67)
==128213==    by 0x10A640: break_commas (parsing_utils1.c:78)
==128213==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128213==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128213==    by 0x109934: floor_information (parsing2.c:30)
==128213==    by 0x109CE7: extract (parsing2.c:133)
==128213==    by 0x109751: map_handling (parsing1.c:110)
==128213==    by 0x1092FF: main (main.c:24)
==128213== 
==128213== Invalid read of size 1
==128213==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==128213==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==128213==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==128213==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128213==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128213==    by 0x109934: floor_information (parsing2.c:30)
==128213==    by 0x109CE7: extract (parsing2.c:133)
==128213==    by 0x109751: map_handling (parsing1.c:110)
==128213==    by 0x1092FF: main (main.c:24)
==128213==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==128213== 
==128213== 
==128213== Process terminating with default action of signal 11 (SIGSEGV)
==128213==  Access not within mapped region at address 0x0
==128213==    at 0x10BCC9: ft_atoi (ft_atoi.c:20)
==128213==    by 0x10AA31: rgb_assignment (parsing_utils2.c:44)
==128213==    by 0x10A6B3: break_commas (parsing_utils1.c:86)
==128213==    by 0x10A745: separate_rgb (parsing_utils1.c:105)
==128213==    by 0x10A887: rgb_parse (parsing_utils1.c:152)
==128213==    by 0x109934: floor_information (parsing2.c:30)
==128213==    by 0x109CE7: extract (parsing2.c:133)
==128213==    by 0x109751: map_handling (parsing1.c:110)
==128213==    by 0x1092FF: main (main.c:24)
==128213==  If you believe this happened as a result of a stack
==128213==  overflow in your program's main thread (unlikely but
==128213==  possible), you can try to increase the size of the
==128213==  main thread stack using the --main-stacksize= flag.
==128213==  The main thread stack size used in this run was 8388608.
==128213== 
==128213== HEAP SUMMARY:
==128213==     in use at exit: 1,048 bytes in 31 blocks
==128213==   total heap usage: 376 allocs, 345 frees, 5,999 bytes allocated
==128213== 
==128213== LEAK SUMMARY:
==128213==    definitely lost: 0 bytes in 0 blocks
==128213==    indirectly lost: 0 bytes in 0 blocks
==128213==      possibly lost: 0 bytes in 0 blocks
==128213==    still reachable: 1,048 bytes in 31 blocks
==128213==         suppressed: 0 bytes in 0 blocks
==128213== Rerun with --leak-check=full to see details of leaked memory
==128213== 
==128213== For lists of detected and suppressed errors, rerun with: -s
==128213== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player1.cub...
###########################################################################
==128238== Memcheck, a memory error detector
==128238== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128238== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128238== Command: ../cub3D error_test/extra_player1.cub
==128238== 
==128238== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128238== 
==128238== HEAP SUMMARY:
==128238==     in use at exit: 0 bytes in 0 blocks
==128238==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128238== 
==128238== All heap blocks were freed -- no leaks are possible
==128238== 
==128238== For lists of detected and suppressed errors, rerun with: -s
==128238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player2.cub...
###########################################################################
==128247== Memcheck, a memory error detector
==128247== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128247== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128247== Command: ../cub3D error_test/extra_player2.cub
==128247== 
==128247== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128247== 
==128247== HEAP SUMMARY:
==128247==     in use at exit: 0 bytes in 0 blocks
==128247==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128247== 
==128247== All heap blocks were freed -- no leaks are possible
==128247== 
==128247== For lists of detected and suppressed errors, rerun with: -s
==128247== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player3.cub...
###########################################################################
==128256== Memcheck, a memory error detector
==128256== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128256== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128256== Command: ../cub3D error_test/extra_player3.cub
==128256== 
==128256== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128256== 
==128256== HEAP SUMMARY:
==128256==     in use at exit: 0 bytes in 0 blocks
==128256==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128256== 
==128256== All heap blocks were freed -- no leaks are possible
==128256== 
==128256== For lists of detected and suppressed errors, rerun with: -s
==128256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player4.cub...
###########################################################################
==128265== Memcheck, a memory error detector
==128265== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128265== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128265== Command: ../cub3D error_test/extra_player4.cub
==128265== 
==128265== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128265== 
==128265== HEAP SUMMARY:
==128265==     in use at exit: 0 bytes in 0 blocks
==128265==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128265== 
==128265== All heap blocks were freed -- no leaks are possible
==128265== 
==128265== For lists of detected and suppressed errors, rerun with: -s
==128265== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player5.cub...
###########################################################################
==128285== Memcheck, a memory error detector
==128285== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128285== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128285== Command: ../cub3D error_test/extra_player5.cub
==128285== 
==128285== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128285== 
==128285== HEAP SUMMARY:
==128285==     in use at exit: 0 bytes in 0 blocks
==128285==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128285== 
==128285== All heap blocks were freed -- no leaks are possible
==128285== 
==128285== For lists of detected and suppressed errors, rerun with: -s
==128285== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player6.cub...
###########################################################################
==128294== Memcheck, a memory error detector
==128294== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128294== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128294== Command: ../cub3D error_test/extra_player6.cub
==128294== 
==128294== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128294== 
==128294== HEAP SUMMARY:
==128294==     in use at exit: 0 bytes in 0 blocks
==128294==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128294== 
==128294== All heap blocks were freed -- no leaks are possible
==128294== 
==128294== For lists of detected and suppressed errors, rerun with: -s
==128294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player7.cub...
###########################################################################
==128303== Memcheck, a memory error detector
==128303== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128303== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128303== Command: ../cub3D error_test/extra_player7.cub
==128303== 
==128303== Warning: invalid file descriptor -1 in syscall close()
Error
Must have one player character(N, W, S, or E)

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128303== 
==128303== HEAP SUMMARY:
==128303==     in use at exit: 0 bytes in 0 blocks
==128303==   total heap usage: 269 allocs, 269 frees, 4,477 bytes allocated
==128303== 
==128303== All heap blocks were freed -- no leaks are possible
==128303== 
==128303== For lists of detected and suppressed errors, rerun with: -s
==128303== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Running test for error_test/extra_player8.cub...
###########################################################################
==128312== Memcheck, a memory error detector
==128312== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==128312== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==128312== Command: ../cub3D error_test/extra_player8.cub
==128312== 
==128312== Warning: invalid file descriptor -1 in syscall close()
Error
Map is broken ):

Welcome to cub3d and you already have committed a folly. Follow the usage below:
1. map must have the suffix '.cub';
2. In clt just execute the program and map;
3. Map must contain all elements (sprites with 
cardinal orientation, proper walled map, and 
RGB notated instructions [numerical value]);

This game has no exit for now, so use ESC to finish the game (:

By: fdessoy- && araveala
==128312== 
==128312== HEAP SUMMARY:
==128312==     in use at exit: 0 bytes in 0 blocks
==128312==   total heap usage: 273 allocs, 273 frees, 4,532 bytes allocated
==128312== 
==128312== All heap blocks were freed -- no leaks are possible
==128312== 
==128312== For lists of detected and suppressed errors, rerun with: -s
==128312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


